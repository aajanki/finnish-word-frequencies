{"text": "Viikkokisa: Back from the Exile! - Page 2 - CoolBasic Forums\nPost by CCE » Mon Mar 22, 2010 8:10 pm\nEli ihan vain varmistuakseni kysyn nyt, onko kaikenlainen musiikki täysin kielletty?\nPost by Awaclus » Mon Mar 22, 2010 9:01 pm\nCCE wrote: Eli ihan vain varmistuakseni kysyn nyt, onko kaikenlainen musiikki täysin kielletty?\nPost by Jonhu » Mon Mar 22, 2010 9:04 pm\nMitenkäs niiden pikselikomentojen kanssa?\nimg = makeimage(100,100)\nputpixel 10,10,pix,image(img)\nPost by Awaclus » Mon Mar 22, 2010 11:18 pm\nOn sallittuja.\nPost by Nassi_Setä » Tue Mar 23, 2010 12:04 am\nmenee jo pilkun viilaamiseen, mutta saako ASCII-graffoja käyttää?\n200. viesti!\nPost by Awaclus » Tue Mar 23, 2010 8:20 am\nNassi_Setä wrote: menee jo pilkun viilaamiseen, mutta saako ASCII-graffoja käyttää?\nPost by Nassi_Setä » Tue Mar 23, 2010 4:38 pm\nJa viellä pitää spämmiä 1 kysymys: Saako SDK:n piirtokomentoja käyttää?\nPost by phons » Tue Mar 23, 2010 5:10 pm\nTässä tämä nyt tuli.. Periaatteessa se on ennen luotua koodia, eli ei.. mutta emmekös me puhuneet näistä kirjastoista että ne voisi sallia näissä kisoissa, eli SDK, cbFun ja jotain muutakin taisi olla.\nPost by Awaclus » Tue Mar 23, 2010 7:26 pm\nChaosworm wrote: - Aikaisemmin kirjoitettua koodia ei saa käyttää grafiikoiden tekemiseen, eli jos olet unohtanut, miten typejä käytetään, mutta jossain aikaisemmassa koodissasi sinulla niitä on, saat ne copypastettaa. Mutta yhtään piirtokomentoriviä et.\nChaosworm wrote: DLL:iä ei saa käyttää.\nPost by Knoy » Wed Mar 24, 2010 7:29 pm\nEn osallistu sittenkään kilpailuun...\nSain jotain toimivaa parallax scrolleria aikaan, mutta säännöt ovat jo hieman turhan sekavat, että jaksaisi miettiä mitä tekee...\nPost by Awaclus » Wed Mar 24, 2010 7:55 pm\nKnoy wrote: En osallistu sittenkään kilpailuun...\nSäännöissä ei ole mitään sekavaa. Yksinkertaistettuna:\n- Yhtään tiedostoa et joko saa käyttää tai siitä ei ole mitään hyötyä sinulle.\n- Kuvamoottoria saa käyttää, mutta ei komentoja/funktioita, joita ei voi korvata sarjalla piirtokomentoja.\n- Sääntöjen kiertäminen on kiellettyä, ja tiedät kyllä varsin hyvin itse jos harjoitat sitä.\nPost by CCE » Sat Mar 27, 2010 2:28 pm\nOsallistun pelillä nimeltä Rollershootism\nPeli on piskuinen shmup pienellä twistillä, ammuksia on ruudulla kerrallaan varsin paljon.\nLataa rollershootism.zip ~1.9mt\nNiin, ja hoksasin vasta viime metreillä että lisätiedostot ovat kiellettyjä Mikäli koet että pelin ääniefektit sumentavat arvostelukykysi voit aina kääntää pelistä äänettömän version\nPost by Kille » Sun Mar 28, 2010 4:45 pm\nTässä oma pelini. Laitan ihan vaan koodin.\nPeli on 3d avaruusräiskintä. Nuolista ohjaa, välilyönnistä ampuu, b:stä kiihdyttää.\ntavoitteesi on päästä perille eli saada se distance nollaan ja voittaa lopari.\nIf GFXModeExists(640,480,32) Then\nSCREEN 640,480,16,0\n'FrameLimit 50\nz#=6\ny#=-1.3\nlife=300\nboost=100\nvastus=False\nbosslf=10000\nbx#=-1\nby#=-1\nType pati\nField lx#\nField ly#\nField lz#\nField vx#\nField vy#\nField vz#\nField vt\n'For i=1 To 360 Step 10\n'Line 0,0, Cos(i+angle)*500,Sin(i+angle)*500\n'angle+1*-1^level\nIf Rand(70-level*10)=1 Then\nvihu.vihut=New(vihut)\nvihu\\vx#=Rnd(-1.75,1.75)\nvihu\\vy#=Rnd(-1.3,1.3)\nvihu\\vz#=0\nvihu\\vt=2\nIf Rand(70-level*10)=1 And level>1 Then\nvihu\\vt=4\nIf Rand(200-level*10)=1  Then\nvihu\\vt=6\nIf Rand(70-level*10)=79 And level>3 Then\nIf Rand(70-level*10)=79 And level>5 Then\nSelect Rand(4)\ns\\sx#=1.9\ns\\sy#=Rand(-1.5,1.5)\ns\\sx#=-1.9\ns\\sy#=1.5\ns\\sx#=Rand(-1.9,1.9)\ns\\sy#=-1.5\ns\\sz#=0.1\nu=u+KeyHit(cbkey1)-KeyHit(vbkey0)\nx#=x#-LeftKey()*0.2+RightKey()*0.2\ny#=y#-DownKey()*0.2+UpKey()*0.2\n'z#=z#+KeyDown(cbkeyu)-KeyDown(cbkeyd)\nIf x#<-1.75 Then x#=-1.75\nIf x#>1.75 Then x#=1.75\nIf y#<-1.3 Then y#=-1.3\nIf y#>1.3 Then y#=1.3\nviiva(2,1.4,0,2,1.4,11)\nviiva(-2,1.4,0,-2,1.4,11)\nviiva(2,-1.4,0,2,-1.4,11)\nviiva(-2,-1.4,0,-2,-1.4,11)\nIf KeyDown(cbkeyspace) and reload<1 Then\nluoti.pati = New (pati)\nluoti\\lx#=x#\nluoti\\ly#=y#\nluoti\\lz#=z#-0.3\nluoti\\s=1\nluoti\\lx#=x#+0.1\nluoti\\lx#=x#-0.1\nluoti\\lx#=x#+0.3\nluoti\\lx#=x#-0.3\nluoti\\lx#=x#+0.4\nluoti\\lx#=x#-0.4\nluoti\\ly#=y#-0.2\nluoti\\ly#=y#+0.2\nIf KeyDown(48) And boost>20 Then booston=ON\nIf KeyDown(48)And booston=ON and boost>0 Then\nbooston=ON\nbooston=0\nIf boost=0 Then BOOST=-200\nIf boost=-1 Then boost=1\nIf booston=ON Then\nColor 200,200,255\nn=n+7\nFor i=1+n To 360+n Step 10\nangle=i\nviiva(Cos(angle),Sin(angle),0,Cos(angle),Sin(angle),11)\ndist+1\nreload-1\nIf boost<100 Then boost+1\nFor luoti.pati=Each pati\nIf luoti\\s=1 Then\nviiva(luoti\\lx#,luoti\\ly#,luoti\\lz#-0.09,luoti\\lx#,luoti\\ly#,luoti\\lz#+0.09)\nluoti\\lz#=luoti\\lz#-(0.1*luoti\\s)\nIf luoti\\lz#<0.2 Then Delete luoti\nColor 225,225,255\nviiva(s\\sx#,s\\sy#,s\\sz#-0.5,s\\sx#,s\\sy#,s\\sz#+0.5)\ns\\sz#=s\\sz#+0.2\nIf s\\sz#>8 Then Delete s\nvihu\\vz#=vihu\\vz#+0.1\nIf vihu\\vt=2 Then\nColor cbdarkpurple\nviiva(vihu\\vx#+0.15,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#-0.15,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#+0.3,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#-0.3,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#+0.15,vihu\\vy#+0.2,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#-0.15,vihu\\vy#+0.2,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#+0.3,vihu\\vy#,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#-0.3,vihu\\vy#,vihu\\vz#)\nIf Rand(60)=1 Then\nluoti\\lx#=vihu\\vx#\nluoti\\ly#=vihu\\vy#\nluoti\\lz#=vihu\\vz#+0.02\nluoti\\s=-1\nElseIf vihu\\vt=4 Then\nviiva(vihu\\vx#+0.15,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#-0.15,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#+0.15,vihu\\vy#-0.2,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#,vihu\\vz#+0.1,vihu\\vx#-0.15,vihu\\vy#-0.2,vihu\\vz#)\nIf Rand(20)=1 Then\nluoti\\lx#=vihu\\vx#+0.1\nluoti\\lx#=vihu\\vx#-0.1\nElseIf vihu\\vt=6 Then\nviiva(vihu\\vx#+0.2,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#-0.2,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#+0.2,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#-0.2)\nviiva(vihu\\vx#-0.2,vihu\\vy#,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#-0.2)\nviiva(vihu\\vx#,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#+0.2)\nviiva(vihu\\vx#,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#-0.2)\nviiva(vihu\\vx#,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#,vihu\\vy#,vihu\\vz#-0.2)\nviiva(vihu\\vx#,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#-0.2,vihu\\vy#,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#-0.2,vihu\\vz#,vihu\\vx#+0.2,vihu\\vy#,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#+0.2,vihu\\vy#,vihu\\vz#)\nviiva(vihu\\vx#,vihu\\vy#+0.2,vihu\\vz#,vihu\\vx#-0.2,vihu\\vy#,vihu\\vz#)\nIf vihu\\vz#>6 Then\nIf Distance(vihu\\vx#,vihu\\vy#,x#,y#)<0.72 Then\nif vihu\\vt<5 then\nlife+40\nIf Abs(vihu\\vx#*vihu\\vz#-luoti\\lx#*luoti\\lz#)<0.33*luoti\\lz# And Abs(vihu\\vy#*vihu\\vz#-luoti\\ly#*luoti\\lz#)<0.33*luoti\\lz# And luoti\\s=1 Then\nIf vihu\\vt=6 Then life+20\nIf Abs(x#*z#-luoti\\lx#*luoti\\lz#)<0.33*luoti\\lz# And Abs(y#*z#-luoti\\ly#*luoti\\lz#)<0.33*luoti\\lz# And luoti\\s=-1 Then\nElseIf luoti\\lz#>10 Then\n//PITKÄT SIVUT\nviiva(x#+0.3,y#+0.3,z#+0.2,x#+0.1,y#+0.1,z#-0.3)\nviiva(x#+0.1,y#+0.1,z#+0.2,x#+0.1,y#+0.1,z#-0.3)\nviiva(x#-0.1,y#+0.1,z#+0.2,x#-0.1,y#+0.1,z#-0.3)\nviiva(x#-0.3,y#+0.3,z#+0.2,x#-0.1,y#+0.1,z#-0.3)\nviiva(x#+0.2,y#-0.1,z#+0.2,x#+0.1,y#-0.1,z#-0.3)\nviiva(x#-0.2,y#-0.1,z#+0.2,x#-0.1,y#-0.1,z#-0.3)\n//Keula\nviiva(x#+0.1,y#+0.1,z#-0.3,x#-0.1,y#+0.1,z#-0.3)\nviiva(x#-0.1,y#-0.1,z#-0.3,x#+0.1,y#-0.1,z#-0.3)\nviiva(x#+0.1,y#+0.1,z#-0.3,x#+0.1,y#-0.1,z#-0.3)\nviiva(x#-0.1,y#-0.1,z#-0.3,x#-0.1,y#+0.1,z#-0.3)\n//PERÄ\nviiva(x#+0.3,y#+0.3,z#+0.2,x#+0.1,y#+0.1,z#+0.2)\nviiva(x#-0.3,y#+0.3,z#+0.2,x#-0.1,y#+0.1,z#+0.2)\nviiva(x#+0.1,y#+0.1,z#+0.2,x#-0.1,y#+0.1,z#+0.2)\nviiva(x#+0.1,y#+0.1,z#+0.2,x#+0.2,y#-0.1,z#+0.2)\nviiva(x#-0.1,y#+0.1,z#+0.2,x#-0.2,y#-0.1,z#+0.2)\n'viiva(x#+0.2,y#-0.1,z#\n//SIIVET\nviiva(x#+0.1,y#+0.1,z#+0.2,x#+0.8,y#+0.08,z#+0.1)\nviiva(x#+0.1,y#+0.1,z#-0.3,x#+0.8,y#+0.08,z#+0.1)\nviiva(x#-0.1,y#+0.1,z#+0.2,x#-0.8,y#+0.08,z#+0.1)\nviiva(x#-0.1,y#+0.1,z#-0.3,x#-0.8,y#+0.08,z#+0.1)\nText 1,1,\"FPS: \"+FPS()\nText 1,21,\"ENERGY: \"+life+\"/300\"\nText 1,41,\"hits: \"+pop\nText 1,61,\"boost: \"+boost\nText 1,81,\"level: \"+level\nText 1,101,\"distance: \"+(25000-dist)\nIf life<1 Then MakeError \"Sait \"+pop+\" pistettä!\"\nIf pop=70 Then level=2\nIf pop=140 Then level=3\nIf pop=200 Then level=4\nIf pop=400 Then level=5\nIf pop=700 Then level=6\nIf pop=1000 Then level=7\nIf KeyDown(cbkey5) Then level=5\nIf dist>25000 Then vastus=True\nIf KeyDown(cbkeyv) Then vastus=True\nIf vastus=True  Then\nviiva(0.2,0.2,4,2,2,3)\nviiva(-0.2,0.2,4,-2,2,3)\nviiva(0.2,-0.2,4,2,-2,3)\nviiva(-0.2,-0.2,4,-2,-2,3)\nviiva(-0.2,0.2,4,2,2,3)\nviiva(0.2,0.2,4,-2,2,3)\nviiva(-0.2,-0.2,4,2,-2,3)\nviiva(0.2,-0.2,4,-2,-2,3)\nviiva(0.2,-0.2,4,2,2,3)\nviiva(-0.2,-0.2,4,-2,2,3)\nviiva(0.2,0.2,4,2,-2,3)\nviiva(-0.2,0.2,4,-2,-2,3)\nviiva(0.2,0.2,4,0.2,-0.2,4)\nviiva(-0.2,0.2,4,-0.2,-0.2,4)\nviiva(0.2,0.2,4,-0.2,0.2,4)\nviiva(0.2,-0.2,4,-0.2,-0.2,4)\nbx#=bx#+(0.1*bl)\nIf bc=1 Then\nby#=by#+(0.1*bv)\nby#=by#+(0.1*bl)\nIf bx#>2 Or bx#<-2 Then bl=bl*-1\nIf Rand(1,3)=1 Then\nvihu\\vx#=bx#\nvihu\\vy#=by#\nvihu\\vz#=4\nIf Rand(1,9)=1 Then\nvihu\\vx#=Rand(-1.7,1.7)\nvihu\\vy#=Rand(-1.5,1.5)\nIf booston=ON Then bosslf-1\nFor p.pati=Each pati\nIf p\\s=1 Then\nIf  p\\lz#<3.5 Then bosslf-5: Delete p\nText 1,141,\"boss: \"+bosslf\nIf bosslf<1 Then MakeError \"Tehtävä suoritettu! Tuhosit yhteensä \"+pop+\" vihollista.\"\nIf dist < 25001 then dist+1\nFunction viiva(x1#,y1#,z1#,x2#,y2#,z2#)\nz1#=(z1#)*(Abs(z1#)/1.5)\nz2#=(z2#)*(Abs(z2#)/1.5)\nLine (x1#*((Sqrt(z1#^4.2))))/5,(y1#*((Sqrt(z1#^4.2))))/5,(x2#*((Sqrt(z2#^4.2))))/5,(y2#*((Sqrt(z2#^4.2))))/5\nvihreästä vihusta saa elämiä.\nPost by Jonhu » Sun Mar 28, 2010 8:04 pm\nItse päätin tehdä tetriksen, joka tosin jäi aika pahasti keskeneräiseksi, mutta pelattavissa kuitenkin Tein pääasiassa pikselikomennoilla koko pelin, mutta mitään kuvien kopiointia ei ohjelmassa ole.\nPeli alkaa New Game napista ( sama nappi pausena pelin aikana )\nOikea ja vasen nuoli liikuttaa palikkaa, ylös nuoli kääntää ja alaspäin osoittava nuoli pudottaa palan nopeasti.\nHighscores nappi ei toimi\n//    Tetris              Versio 0.01 beta                 //\n// Tehnyt: Jonhu       20.03.2010 - 28.03.2010             //\n//FrameLimit 60\nType EFECT\nType Palikka\nField ang As Float\nField aspd As Float\nField yspd As Float\nConst GRAVITY# = 0.2\nConst kenttax = 100\nConst kenttay = 70\nConst Pala_max_width  = 3     // 0,1,2,3\nConst Pala_max_height = 3\nConst paloja_max = 4\nConst Game_Frame_size = 10\nConst Score_Flash_Len = 400 // ms\nConst Level_time      = 15000 //ms\nGlobal Scores, GameOnline\nPala_size     = 30\nkentta_width  = 8\nkentta_height = 12\nmove_speed#   = 1.5\nDim Box_img( Paloja_max*2+10 )              // taulukko boksien kuville...\nDim alue( ScreenWidth(), ScreenHeight(), 3) // efektejä varten taulukko taustasta\nDim Pala( Pala_max_height, Pala_max_width ) // ruudukko yksittäisestä palasta\nDim Kentta( kentta_height, kentta_width   ) // kenttä ruudukkona\nInitCollisionTable(kentta_width, kentta_height) // kentän alustus ihan vamuuden vuoksi\nPrint \"Generating Images...\"\nGenerateBoxes( 1, paloja_max, pala_size ) // tekee pala koolla 1-paloja_max paikkoihin palat\nGenerateBoxes( 10, paloja_max+10, 20 )    // efektiboksit\n// Kuvien luonti...\nScoreBox_Frame = MakeImage( 220, 160 )\nBackGround_img = MakeImage( ScreenWidth(), ScreenHeight() )\nKentta_img     = MakeImage( kentta_width*Pala_size, kentta_height*Pala_size )\nGame_Frame_img = MakeImage( kentta_width*Pala_size+Game_Frame_size*4, kentta_height*Pala_size+Game_Frame_size*4 )\nGame_Frame_img = DrawFraktBox( Game_Frame_img, Game_Frame_size,100, 40,70,30, 1 )\nScoreBox_Frame = DrawFraktBox( ScoreBox_Frame, 10,50, 40,70,30 )\nMaskImage ScoreBox_Frame, 255,0,255\n//MaskImage Game_Frame_img, 255,0,255\n// Seuraavan palan tiedot\nNext_Pala_id  = Rand(1,paloja_max)\nGetPala( Next_Pala_id   )\nNext_pala_img = DrawPala( 20, Next_Pala_id )\n// uusi pala käyttöön\npala_id = Rand(1,paloja_max)\nGetPala( pala_id  )\n// mitat talteen, ettei tarvitse tutkia monesti\npala_w = GetWidth()\npala_h = GetHeight()\npala_img = DrawPala( pala_size, pala_id )\npala_x#  = kenttax + RoundDown( kentta_width * pala_size / 2 )\npala_y#  = kenttay-(  pala_h ) * Pala_size\nKentta_height_ = kenttay + ( kentta_height - pala_h ) * Pala_size\n// fontit\n//Print \"Loading Fonts...\"\nTitle_font = LoadFont(\"arial\",28,OFF,OFF,ON)\nSmall_font = LoadFont(\"arial\",14)\nScore_font = LoadFont(\"arial\",20,ON)\nSetFont Title_font\nOtsikko_font = Btext( \"  Classic Tetris  \", 4, 20,150,200 )\nMakeLAATIKKOT()\nSetFont Score_font\nMap_Moving# = 0\nScoreBox_x  = 400\nScoreBox_y  = 60\n// nappien lataus..\nNew_Game_Button   = MakeFraktButton( \"New Game\",   430,300,160,40, 5, 50, 30,30,100, 20,20,120)\nHighScores_button = MakeFraktButton( \"HighScores\", 430,350,160,40, 5, 50, 80,20,20, 100,20,20)\nExit_Button       = MakeFraktButton( \"Exit\",       570,440,60,30, 3, 50, 80,20,20, 100,20,20)\n// Efekteihin liittyvät muuttujat\nEfect_mode  = False\nEfect_stop  = False\nEfect_timer = Timer()\nLevel_timer = Timer()\n// alkaa peli näkymällä\nShowHighScores = 0\ntaustax = 200\n// tausta efectejä\nSelect Efect_mode\nCase 0 // boksit\nBox_Left = UpdateBoxes( Efect_stop, kentta_width*pala_size, kentta_height*pala_size )\n// siirtyminen moodista toiseen\nIf Efect_timer + Level_time*2 <= Timer()\nNewLine( 25 )\nEfect_mode  = 1\nCase 1 // viivat vari blue\nBackGround_img = UpdateLines( BackGround_img, kentta_width*pala_size, kentta_height*pala_size, Efect_stop  )\nIf Box_Left > 0 Then Box_Left = UpdateBoxes( 1, kentta_width*pala_size, kentta_height*pala_size )\nIf Efect_timer + Level_time < Timer() Then Efect_stop = 1  : Efect_mode = 2\n//   DrawImage BackGround_img, 0, 0\nangl# = WrapAngle(angl# + 0.5)\n//  taustax = taustax + Suuntakerroin\n//    tautay = tautay + Suuntakerroin\ntaustax = taustax +Cos(angl#)*1\n//   tautay = tautay + Sin(angl#)*1\n//     If taustax >= ScreenWidth() Or taustay >= ScreenHeight() Then Suuntakerroin = -1\n//    If taustax <= 0 Or taustay <=0  Then Suuntakerroin = 1\nMoveBackGround( BackGround_img, Taustax, 0 )\n// taustan ja kentan taustan piirto\n// DrawImage BackGround_img, 0, 0\n// MoveBackGround( BackGround_img, Taustax, Taustay )\n// Napit\nHighScores_button = DrawFraktButton( HighScores_button )\nNew_Game_Button   = DrawFraktButton( New_Game_Button )\nExit_Button       = DrawFraktButton( Exit_Button )\nIf PeekByte( Exit_Button, 24 ) = 2 Then Exit\n// If PeekByte( HighScores_button, 24 ) = 2 Then ShowHighScores = Not ShowHighScores\nIf PeekByte( New_Game_Button,24 ) = 2 Then GameOnline = Not GameOnline\n// palan liikutus..\nIf GameOnline=1 Then pala_y = pala_y + move_speed#\n// piirretään pelin kehys\nDrawImage Game_Frame_img, kenttax-Game_Frame_size*2, kenttay-Game_Frame_size*2\n// palan kääntäminen\nIf KeyHit( cbkeyUP ) And GameOnline=1 Then\nRotatePala( pala_x, Max(pala_y,kenttay), Pala_size, pala_h, pala_w  )\n// tyhjätään vanha kuva\nDrawToImage pala_img\nBox 0,0,ImageWidth(pala_img), ImageHeight(pala_img)\nDeleteImage pala_img\npala_x = Max( Min( pala_x, kenttax + ( kentta_width - pala_w ) * pala_size  ), kenttax )\n// liikuttaminen sivusuunnassa\nnappi = KeyHit( cbkeyRIGHT ) - KeyHit( cbkeyLEFT )\nIf nappi <> 0 And GameOnline=1 Then\n// liikutus ja seinään törmäys\npala_nx = Max( Min( pala_x + pala_size * nappi, kenttax + ( kentta_width - pala_w ) * pala_size  ), kenttax)\n// muihin paloihin törmäystarkistus\nIf CheckCollision( pala_x, Max(pala_y,kenttay), Pala_size, pala_w, pala_h ) = False Then pala_x = pala_nx\n// nopea pudotus\nIf Max( KeyHit( cbkeyDOWN ), KeyHit( cbkeyspace ) ) > 0 And GameOnline=1 Then\nx = RoundDown((pala_x - kenttax) / pala_size)\nFor y = 0 To kentta_height-pala_h\nFor py = 0 To pala_h\nFor px = 0 To pala_w\nIf Kentta( y + py, x + px ) > 0 And pala( py, px ) = 1 Then collision + 1\n// paikka löytynyt, jossa tilaa\nIf collision = 0 Then pala_y = kenttay + y * pala_size Else Exit\nsave_pala = True\n// palan asetus paikoilleen ja uuden luonti\nIf save_pala = True Or Kentta_height_ <= pala_y Or CheckCollision( pala_x, Max(pala_y,kenttay), Pala_size, pala_w, pala_h ) Then\nDrawToImage kentta_img\nDrawImage pala_img, pala_x - kenttax , pala_y - kenttay\n// päivitetään kentän törmäys taulukko\nkentta_img = UpdateMap( kentta_img, pala_x, pala_y, Pala_size, kentta_width, kentta_height, pala_w, pala_h, pala_id )\npala_id = Next_Pala_id // Rand(1,4)\nDeleteImage Next_pala_img\nGetPala( pala_id  ) // luodaan pala taulukkoon\nScores = Scores + 10*level\npala_x#  = kenttax + RoundDown(kentta_width*pala_size/2)\npala_y#  = kenttay - pala_h * pala_size\nsave_pala = False\nIf Timer() >= Level_timer + Level_time And GameOnline=1 Then\nmove_speed# + 0.2\n// piirretään kentta\nDrawImage Kentta_img, kenttax, kenttay\nDrawImage ScoreBox_Frame,ScoreBox_x, ScoreBox_y\n// piirretään poksautetut palikat\nDrawPalikat()\n// h = pala_y+pala_h*pala_size-kenttay\n// liikkuvan palikan piirto.-..\nIf pala_y < kenttay Then\nPala_h1 = pala_y + pala_h * pala_size - kenttay // paljonko palaa näkyvissä kenttä alueella\nIf Pala_h1 > 0 Then\nDrawImageBox pala_img, pala_x,kenttay, 0, pala_h * pala_size - Pala_h1, pala_w*pala_size, Pala_h1\nDrawImage pala_img, pala_x, pala_y\n//  Box kenttax,0, kentta_width*pala_size, kenttay\nDrawImage otsikko_font, kenttax + 25, kenttay-60\n// luodaan lukujen muuttumiseen vähän vaihtelua...\nIf Scores > Scores_Shown Then\nIf Scores - Scores_Shown > 200 Then\nColor_WTimer  = 0\nColor_Timer   = Timer()\nScoreS_Shown  = Scores\nScore_Flashes = 4\nElseIf Scores - Scores_Shown > 100\nScores_Shown + 5\nElseIf Scores - Scores_Shown > 50\nScores_Shown + 2\nScores_Shown + 1\n// ScoreBoksin päivitys\nText 425,100,\"Next part: \"\nIf Color_WTimer + Score_Flash_Len < Timer() And Timer() < Color_timer + Score_Flash_Len Then\nIf Score_Flashes > 0 And Color_WTimer = 0 Then\nScore_Flashes - 1\nColor_WTimer = Timer()\nColor_timer  = Timer() + Score_Flash_Len\nText 450,150,\"Scores: \" + Scores_Shown\nText 450,180,\"Level:  \" + level\nDrawImage Next_pala_img, 515, 90\n//DrawCollisionTable(400,20, kentta_width, kentta_height)\n//drawPalaTable(400,400)\n// kentän piirto\n// Box kenttax,kenttay, kentta_width*pala_size, kentta_height*pala_size, 0\nText 10,10,FPS()\n// häviö\nIf GameOnline = -1 Then\nText kenttax+kentta_width*pala_size/2, ScreenHeight()/2,\"..The End..\"\nwwtime = Timer()\nUntil ( GetKey()<> 0 Or MouseDown(1) ) And wwtime+1000 < Timer()\nGameOnline = 0\nScores_Shown = 0\nInitCollisionTable(kentta_width, kentta_height)\nkentta_img = DrawMap( kentta_img, pala_size, kentta_width, kentta_height )\nDeleteImage Game_Frame_img\nDeleteImage kentta_img\nDeleteImage BackGround_img\nDeleteImage ScoreBox_Frame\nFunction drawPalaTable(x1,y1)\nFor ky = 0 To 3\nFor kx = 0 To 3\nText x1+kx*12,y1+ky*12,pala( ky, kx )\nFunction Btext( rivi$, bold = 3, r=255,g=255,b=255)\nimg = MakeImage( TextWidth(rivi$)+b*5, TextHeight(rivi$)+b*5 )\nFor a=0 To bold\nColor a*r/bold, a*g/bold, a*b/bold\nFor c=1 To Len(rivi$)\nText a+TextWidth( Left(rivi$,c-1) ),a, Mid(rivi$,c,1)\nFunction DrawMap( img, size, kentta_width, kentta_height )\nBox 0,0, ImageWidth(img), ImageHeight(img)\nFor ky = 0 To kentta_height-1\nFor kx = 0 To kentta_width-1\nIf kentta( ky, kx ) > 0 Then\n//  Color cbgreen\n//    Box kx*size,ky*size, size,size\nGetColor( kentta( ky, kx ) )\nColorBox( img, kx*size,ky*size, size )\nFunction InitCollisionTable(kentta_width, kentta_height)\nFor ky = 0 To kentta_height\nFor kx = 0 To kentta_width\nkentta( ky, kx ) = 0\nFunction DrawCollisionTable(x1,y1, kentta_width, kentta_height)\nText x1+kx*12, y1+ky*12, Kentta( ky, kx )\nFunction CheckCollision( pala_x, pala_y, Pala_size, pala_w, pala_h )\npala_x = RoundDown((pala_x - kenttax) / pala_size)\npala_y = Max( RoundDown((pala_y - kenttay) / pala_size), 0 )\nIf Kentta( pala_y+py+1, pala_x+px) > 0 And pala( py, px ) = True Then Return 1\nFunction UpdateMap( kentta_img, pala_x, pala_y, Pala_size, kentta_width, kentta_height, pala_w, pala_h, pala_id )\npala_y = Max( RoundDown((pala_y - kenttay) / pala_size), 0 ) // varmuuden vuoksi ei \"alikirjoiteta\" taulukkoa\nIf Pala( py, px ) = 1 Then Kentta( pala_y+py, pala_x +px ) = pala_id\n// Poistetaan rivit kun täysiä..\nFor y = 0 To kentta_height-1\nFor x = 0 To kentta_width-1\nIf kentta(y,x) > 0 Then nx = nx + 1\nIf nx = kentta_width Then\n// kaikki ylemmät rivit yhtä alemmaksi\npudotusmatka = 1\nFor ky = y To 1 Step -1\nkentta(ky,x) = kentta(ky-pudotusmatka,x)\n// irralliset palat...\npala_img    = MakeImage( kentta_width * pala_size, pala_size )\nMaskImage pala_img, 255, 0 ,255\nCopyBox 0, pala_size * y, pala_size * kentta_width, pala_size, 0,0, Image( kentta_img ), Image(pala_img)\nMakePalikat( Pala_img,  kenttax, y*pala_size+kenttay, pala_size )\nScores = Scores + 1000\n// häviön tarkistus...\nFor x=0 To kentta_width-1\nIf kentta(0,x) > 0 Then GameOnline = -1\n// kuvan päivitys\nReturn kentta_img\n// tekee palikka rivistä irralliset palikat...\nFunction MakePalikat( img1, x1, y1, pala_size )\nFor a = 0 To (ImageWidth(img1) / pala_size) - 1\naa.PALIKKA = New( PALIKKA )\naa\\x = x1 + a * pala_size\naa\\y = y1\naa\\aspd = Rnd(2,1)\naa\\ang  = Rand(0,180)\naa\\yspd = 0\naa\\img = MakeImage( pala_size, pala_size )\n//DrawToImage aa\\img\n//       DrawImageBox img1, 0,0, a * pala_size, 0, pala_size, pala_size\n// DrawToScreen\nCopyBox a*pala_size,0, pala_size, pala_size, 0,0, Image(img1), Image(aa\\img)\nFunction DrawPalikat()\nFor aa.PALIKKA = Each PALIKKA\n// liikutus\naa\\yspd = aa\\yspd + GRAVITY\naa\\x = aa\\x + Cos( aa\\ang ) * aa\\aspd\naa\\y = aa\\y + Sin( aa\\ang ) * aa\\aspd + aa\\yspd\nIf aa\\x < 0 Or aa\\y < 0 Or aa\\x >=ScreenWidth() Or aa\\y >= ScreenHeight() Then\nDeleteImage aa\\img\nDrawImage aa\\img, aa\\x, aa\\y\n// piirtää palan\nFunction DrawPala( size, pala_id )\nGetColor( pala_id )\nimg = MakeImage( 4*size, 4*size )\nIf pala(y,x) = 1 Then //ColorBox( img, x*size,y*size ,size, 2 )\nCopyBox 0,0,size,size, x*size, y*size, Image(Box_img( pala_id )), Image(img)\nFunction GetColor( pala_id )\nIf pala_id > 10 Then pala_id - 10\nSelect pala_id\nCase 1 : Color 120, 10, 20\nCase 2 : Color 20, 10, 200\nCase 3 : Color 20, 110, 20\nCase 4 : Color 20, 90, 120\n// Matriisin kääntäminen\n// http://en.wikipedia.org/wiki/In-place_matrix_transposition\n// http://geekswithblogs.net/cwilliams/archive/2008/06/16/122906.aspx\nFunction RotatePala( pala_x, pala_y, Pala_size, pala_w, pala_h ) // pala_w = kääntämättön pala_h\nDim temp(3,3)\ntemp(i,3-j) = pala(j,i)\n// lasketaan paljonko arvoja tarvitsee siirtää tasamiseksi vasempaan nurkkaan\nIf temp(j,i) > 0 Then n + 1\nIf n=0 Then nx + 1\n// palan sijainti\npala_y = RoundDown((pala_y - kenttay) / pala_size)\n// törmäystunnistus\nIf Kentta( pala_y+py+1, pala_x+px) > 0 And temp( py, px ) = True Then Return False\n// putsataan pala-taulukko\nGetPala( -1 )\n// kopiodaan arvot pala-muttujaan\nIf temp(j,i) > 0 Then pala(j,i-nx) = temp(j,i)\nFunction GetPala( pala_id )\npala( y, x ) = 0\nCase 1 //  4 suora\npala( 0, x ) = 1\nCase 2  // L muoto 3 suora\npala( x, 0 ) = 1\npala( 0, 1 ) = 1\nCase 3   // T muotoinen 3 suora\npala( 1, 1 ) = 1\nCase 4 // kulma pala\npala( 1, 0 ) = 1\nDefault // jos haluaa vain tyhjätä ruudun\nFor y=0 To Pala_max_height\nFor x=0 To Pala_max_width\nIf pala( x, y ) = 1 Then n + 1\nIf n > n1 Then n1 = n\nIf pala( y, x ) = 1 Then n + 1\nFunction ColorBox( img, x1,y1,size, paksuus = 2)\nr1# = r : g1# = g : b1# = b\nkx = x1 + size/2\nky = y1 + size/2\nold_dist# = 0\nFor y=y1 To size+y1\nFor x=x1 To size+x1\ndist# = Distance( x,y, kx, ky )*2\nIf old_dist# < dist# Then k = 1 Else k = -1\nr1 = r1 + (dist#/size*2.0) * k\ng1 = g1 + (dist#/size*2.0) * k\nb1 = b1 + (dist#/size*2.0) * k\nold_dist# = dist#\nIf x < ImageWidth(img) And y < ImageHeight(img) Then\npixel = (( 255 Shl 24 ) + ( Min( Max(r1,0), 255) Shl 16 ) + ( Min( Max(g1,0), 255) Shl 8 ) + Min( Max(b1,0), 255))\nPutPixel2 x,y, pixel\nBox x1,y1,size,paksuus\nBox x1,y1,paksuus,size\nBox x1+size-paksuus+1,y1,paksuus,size\nBox x1,y1+size-paksuus+1,size,paksuus\nFunction UpdateBoxes( stop,  kentta_w,kentta_h,sivu=20, palojamax=4 )\nFor aa.EFECT = Each EFECT\nIf aa\\y2 = 0 Then // muuten ei ole laatikko\naa\\y1 = aa\\y1 + aa\\spd\npiirra = True\nIf aa\\x1 >= kenttax-sivu And aa\\x1 <=kenttax+kentta_w+sivu Then\nIf aa\\y1 >= kenttay-sivu And aa\\y1 <= kenttay+kentta_h+sivu Then\npiirra = False\nIf piirra = True Then\n// DrawGhostImage aa\\img, aa\\x, aa\\y,  0 , Int(100.0 - (aa\\y / ScreenHeight())*90)\nDrawImage aa\\img, aa\\x1, aa\\y1\nIf aa\\y1 > ScreenHeight() Then\naa\\x1 = Rand(ScreenWidth())\naa\\y1 = 0\naa\\spd = Rnd( 0.9, 3 )\naa\\img = box_img( 10+Rand(1, palojamax ) )\nmaara + 1\nFunction MakeLAATIKKOT( palojamax=4, maara = 100 )\nFor a=1 To maara\naa.EFECT = New(EFECT)\naa\\y1 = Rand(ScreenHeight())\naa\\spd = Rnd( 0.8, 3 )\naa\\img = box_img( 10 + Rand(1, palojamax ) )\naa\\y2 = 0\nFunction DrawLAATIKKO( size, palojamax=4 )\nGetColor( Rand(1,4) )\nimg = MakeImage( size, size )\nimg = box_img( 10 + Rand(1,palojamax) )\nFunction MakeFraktButton( txt$, x,y, width, height, sivu, iter, r1,g1,b1,  r2,g2,b2 )\nmem  = MakeMEMBlock( 25 )\nimg1 = MakeImage( width, height )\nimg2 = MakeImage( width, height )\nDrawToImage img1\nFor y1=sivu To height-sivu\nFor x1=sivu To width-sivu\nIf y1 Mod 2 = 0 Then\nIf ( x1 Mod 2 ) = 0 Then  Dot x1,y1\nIf ( x1 Mod 2 ) <> 0 Then  Dot x1,y1\nimg1 = DrawFraktBox( img1, sivu, iter, r1,g1,b1 )\nimg2 = DrawFraktBox( img2, sivu, iter, r2,g2,b2 )\n// MaskImage img1, 255,0,255\nMaskImage img2, 255,0,255\nCenterText width/2,-height/2,txt$,2\nPokeFloat mem, 0, img1\nPokeFloat mem, 4, img2\n// Napin sijnainti yms..\nPokeInt mem, 8,  x\nPokeInt mem, 12, y\nPokeInt mem, 16, width\nPokeInt mem, 20, height\nPokeByte mem, 24, 0 // on / off\nFunction GenerateBoxes( start_pala, end_pala, size )\nFor a=start_pala To end_pala\nGetColor( a )\nBox_img(a) = MakeImage( size, size )\nBox_img(a) = ColorBox( Box_img(a), 0,0 ,size )\nFunction DrawFraktButton( mem )\nIf mem = 0 Then Return 0\nIf BoxOverlap( MouseX(), MouseY(), 1,1, PeekInt(mem,8), PeekInt(mem,12), PeekInt(mem,16), PeekInt(mem,20) ) Then\nIf MouseHit(1) Then PokeByte mem, 24, 2 Else PokeByte mem, 24, 1\nPokeByte mem, 24, 0\nIf PeekByte( mem, 24 ) = 0 Then img = PeekFloat(mem,0) Else img = PeekFloat(mem,4)\nDrawImage img, PeekInt(mem,8), PeekInt(mem,12)\nFunction DrawFraktBox( img, sivu,iter, r,g,b, mode = 0 )\nw = ImageWidth(img)\nh = ImageHeight(img)\nimg1 = MakeImage(sivu*2,h)\nimg2 = MakeImage(w,sivu*2)\n// tehdään kahden viivan fraktaalit ja kopioidaan niistä loput --> nopeampaa\nFor x = sivu To w-sivu\nRndFrakt2( img2, x, sivu, r,g,b,iter )\nFor y = sivu To h-sivu\nRndFrakt2( img1, sivu, y, r,g,b,iter )\nColor 255,0,255 : Box 0,0,ImageWidth(img),ImageHeight(img)\nColor 0,0,0     : Box sivu,sivu,ImageWidth(img)-sivu*2,ImageHeight(img)-sivu*2\nIf mode = 1 Then Color 255,0,255 : Box sivu*2,sivu*2,ImageWidth(img)-sivu*4,ImageHeight(img)-sivu*4\nDrawImage img2, 0,0\nDrawImage img1, 0,0\nDrawImage img2, 0,h-2*sivu\nDrawImage img1, w-2*sivu,0\nDeleteImage img1\nDeleteImage img2\nFunction RndFrakt2( img, kx,ky, r,g,b,iter=50)\npx = kx : py = ky\nwidth = ImageWidth(img ) : height = ImageHeight(img)\nDim area(width, height, 3)\nFor a=0 To iter\npx = px + Rand(-1,1)\npy = py + Rand(-1,1)\nIf px>=0 And py>= 0 And px<width And py<height Then\narea( px, py, 0 ) = Min( area( px, py, 0 ) + Rand(r),255)\narea( px, py, 1 ) = Min( area( px, py, 1 ) + Rand(g),255)\narea( px, py, 2 ) = Min( area( px, py, 2 ) + Rand(b),255)\nPutPixel2 px, py, ( 255 Shl 24 ) + (area( px, py, 0 ) Shl 16) + (area( px, py, 1 ) Shl 8) + area( px, py, 2 )\npx = kx\npy = ky\nFunction UpdateLines( img1, kentta_w,kentta_h, stop=0 )\nFor dd.EFECT = Each EFECT\nIf dd\\y2 <> 0 Then // muuten ei ole viiva vaan laatikko\nang# = -GetAngle( dd\\x1, dd\\y1, dd\\x2, dd\\y2 )\ndd\\x1 = dd\\x1 + Cos(ang) * dd\\spd\ndd\\y1 = dd\\y1 + Sin(ang) * dd\\spd\nRndFrakt( img1, dd\\x1, dd\\y1, 0,0, ImageWidth(img1), ImageHeight(img1), kentta_w,kentta_h)\nIf dd\\y1 >= dd\\y2 Then\ndd\\x1 = Rand(ScreenWidth())\ndd\\y1 = 0\ndd\\x2 = dd\\x1\ndd\\y2 = ScreenHeight()\nFunction NewLine( maara = 25 )\naa\\y1 = Rand(-ScreenHeight())\naa\\x2 = aa\\x1\naa\\y2 = ScreenHeight()\naa\\spd = Rnd( 0.5, 2 )\nFunction RndFrakt( img, kx,ky, x1,y1, width, height, kentta_w,kentta_h , iter=70)\n// tutkitaan pimennys vai ei..\nDarken# = 1.0\nIf px >= kenttax And px <=kenttax+kentta_w Then\nIf py >= kenttay And py <= kenttay+kentta_h Then\n//      darken# = 0.3 // tummennus 50%\nalue(px,py,0) = Min( alue(px,py,0) + Int(Rnd(1,15)*darken#)  , 255 )\nalue(px,py,1) = Min( alue(px,py,1) + Int(Rnd(1,15)*darken#)  , 255 )\nalue(px,py,2) = Min( alue(px,py,2) + Int(Rnd(10,15)*darken#) , 255 )\nPutPixel2 px, py, ( 255 Shl 24 ) + (alue( px, py, 0 ) Shl 16) + (alue( px, py, 1 ) Shl 8) + alue( px, py, 2 )\nFunction MoveBackGround( img, x,y, px=0,py=0 )\nimg2 = MakeImage( ImageWidth(img), ImageHeight(img) )\nIf x >= ImageWidth(img)  Then x = ( x Mod ImageWidth(img) )\nIf y >= ImageHeight(img) Then y = ( y Mod ImageHeight(img) )\nax = ImageWidth(img)  - Max(x,0)\nay = ImageHeight(img) - Max(y,0)\nCopyBox x,y, ax, ay, 0,0, Image(img), Image(img2)  // yläänurkka\nCopyBox ax,y,  x,ay, ax,0, Image(img), Image(img2)// oikea yläsivu\nimg2=FlipImageBoxX( img2, ax,0, x,ay )\nCopyBox x,ay,  ax,y, 0,ay, Image(img), Image(img2) // vasen ala\nimg2 = FlipImageBoxY( img2, 0,ay, ax,y )\nCopyBox 0,0,  x,y, ax,ay, Image(img), Image(img2) // oikea ala\nimg2 = FlipImageBoxY( img2, ax,ay, x,y )\nimg2 = FlipImageBoxX( img2, ax,ay, x,y )\nDrawImage img2, px,py\nx = x Mod ImageWidth(img)\nax = ImageWidth(img)  - x\n// \"ruudun nro\" % 2 = 0 niin...\nIf ( RoundDown(x1 /ImageWidth(img)) Mod 2 ) = 0 Then\n// x = x + ImageWidth(img)\nimg2 = FlipImageBoxX( img2, ax,0, x,ay )\n// kääntää kuvan alueen x-akselin suhteen ympäri\nFunction FlipImageBoxX( img, sx, sy, w, h )\ntmp = MakeImage(w,h)\nCopyBox x+sx-1, sy,1,h,  w-x, 0, Image(img), Image(tmp)\nCopyBox 0,0,w,h,  sx,sy, Image(tmp), Image(img)\nFunction FlipImageBoxY( img, sx, sy, w, h )\nCopyBox sx,sy+y-1,w,1,  0, h-y, Image(img), Image(tmp)\nPari kuvaa pelistä:\nEDIT: Jaa pitää alkaa etsiä sit erroreita :S Koodissa vähän kaikkea turhaa krääsää, kun pelin efektit muuttuivat kesken koodauksen\ntetris01.rar\nTetris exenä\n(590.54 KiB) Downloaded 136 times\nLast edited by Jonhu on Sun Mar 28, 2010 8:31 pm, edited 2 times in total.\nPost by MetalRain » Sun Mar 28, 2010 8:20 pm\nJonhu wrote: Itse päätin tehdä tetriksen, joka tosin jäi aika pahasti keskeneräiseksi, mutta pelattavissa kuitenkin\nVaikuttaa kuvien perusteella hienolta, mutta saan MAV:in kun vien hiiren kumman tahansa napin päälle päävalikossa. Pääsin pelaamaan kun kommentoin napit ja laitoin pelin aloituksen näppäinnapsautuksen taakse.", "timestamp": "2020-04-05T03:56:24Z", "url": "https://www.coolbasic.com/phpBB3/viewtopic.php?f=14&t=2139&start=20"}